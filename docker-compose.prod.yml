services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn server.wsgi:application --bind 0.0.0.0:8000 --access-logfile - --error-logfile -
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
    restart: unless-stopped
  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    restart: unless-stopped
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
volumes:
  postgres_data:
  static_volume: